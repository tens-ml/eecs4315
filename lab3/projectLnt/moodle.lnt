module moodle is

    type course is eecs, humanities, science, arts, empty with ==, != end type

    type assessment is quiz, midterm, assignment, empty with ==, != end type 

    channel assessmentChannel is (a: assessment) end channel
    channel courseChannel is (c: course) end channel



    process Main [ENROLL, ASSIGN: courseChannel, VIEWASSESSMENT, UPSERTASSESSMENT: assessmentChannel] is
            par      
                ASSIGN,ENROLL -> SystemAdmin [ASSIGN, ENROLL]
            ||    
                ASSIGN -> Instructor[ASSIGN, UPSERTASSESSMENT]
            ||
                ENROLL -> Student[ENROLL,VIEWASSESSMENT]
            end par
    end process

    process SystemAdmin[ASSIGN, ENROLL:courseChannel] is 
        loop
            var c: course in 
                c := any course where c != empty;
		select  
                 ASSIGN(c)
                [] ENROLL(c)
            	end select
	    end var
        end loop
    end process

    process Student [RECEIVEENROLLMENT: courseChannel, VIEWASSESSMENT: assessmentChannel] is 
        var c: course, a:assessment in
            c:= empty;
            a:= empty;
            loop 
                select 
                    RECEIVEENROLLMENT(?c)
                []
		    if c != empty then
	                VIEWASSESSMENT(a)
		    end if
                end select
            end loop
        end var
    end process
  
    process Instructor[RECEIVECOURSE: courseChannel, UPSERTASSESSMENT: assessmentChannel] is 
        
        var c: course, a: assessment in         
            c:= empty;
            loop
                select 
                        RECEIVECOURSE(?c)
                []
                        if c != empty then 
		            -- TODO: How to code this better?
                            select 
                                a := quiz [] a:= midterm [] a := assignment
                            end select;	    
			                UPSERTASSESSMENT(a)			    
                        end if 
                end select
            end loop
        end var
    end process


end module