module moodle is

    type course is eecs, humanities, science, arts, empty with ==, != end type

    type assessment is quiz, midterm, assignment, empty with ==, != end type 

    type content is lecture, video, empty with ==, != end type

    channel assessmentChannel is (a: assessment) end channel
    channel courseChannel is (c: course) end channel
    channel contentChannel is (c: content) end channel


    process Main [ENROLL, ASSIGN: courseChannel, VIEWCONTENT: contentChannel, VIEWASSESSMENT, ANNOUNCEASSESSMENT,UPSERTASSESSMENT: assessmentChannel] is
        var s1, i1: nat in 
            s1 := 1;
            i1 := 1;    

            par      
                ASSIGN,ENROLL -> SystemAdmin[ASSIGN, ENROLL]
            ||    
                ASSIGN, UPSERTASSESSMENT -> Instructor[ASSIGN, UPSERTASSESSMENT](i1)
            ||
                ENROLL, ANNOUNCEASSESSMENT -> Student[ENROLL,VIEWCONTENT, ANNOUNCEASSESSMENT, VIEWASSESSMENT](s1)
            ||
                UPSERTASSESSMENT, ANNOUNCEASSESSMENT -> CourseManagement[UPSERTASSESSMENT, ANNOUNCEASSESSMENT]
            end par
        end var
    end process

    -- USER BEHAVIOURS
    process SystemAdmin[ASSIGN, ENROLL:courseChannel] is 
        loop
            var c: course in 
                c := any course where c != empty;
		select  
                 ASSIGN(c)
                [] ENROLL(c)
            	end select
	    end var
        end loop
    end process

    process Student [RECEIVEENROLLMENT: courseChannel, VIEWCONTENT: contentChannel, RECEIVEASSESSMENT, VIEWASSESSMENT: assessmentChannel](studentId: nat) is 
        var c: course, a: assessment, courseContent: content in
            c:= empty;
            a:= empty;
            courseContent:= empty;
            loop 
                select 
                    RECEIVEENROLLMENT(?c)
                []
                    if c != empty then
                        VIEWCONTENT(courseContent)
                    end if
                []
                    RECEIVEASSESSMENT(?a)
                []
                    if a != empty then
                        VIEWASSESSMENT(a)
                    end if
                end select
            end loop
        end var
    end process
  
    process Instructor[RECEIVECOURSE: courseChannel, UPSERTASSESSMENT: assessmentChannel](instructorId: nat) is 
        
        var c: course, a: assessment in         
            c:= empty;
            loop
                select 
                        RECEIVECOURSE(?c)
                []
                        if c != empty then 
		                    -- TODO: How to code this better?
                            select 
                                a := quiz [] a:= midterm [] a := assignment
                            end select;	    
			                UPSERTASSESSMENT(a)			    
                        end if 
                end select
            end loop
        end var
    end process

    -- INTERNAL SUBSYSTEMS
    process CourseManagement[RECEIVEASSESSMENT, ANNOUNCEASSESSMENT: assessmentChannel] is
        var a: assessment in 
            a := empty;
            loop
                select
                    RECEIVEASSESSMENT(?a) 
                []
                    if a != empty then
                        ANNOUNCEASSESSMENT(a);
                        a := empty 
                    end if
                end select
            end loop
        end var
    end process

end module